{"metadata":{"dist-tags":{"legacy":"8.5.3","latest":"10.27.2","beta":"11.0.0-beta.0"},"versions":{"1.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.2.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"jshint {src,tests}/**.js && mocha --compilers js:babel/register test","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build"}},"1.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node"}},"1.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node"}},"1.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.3.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.4.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel src --source-root src -s -d .","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"1.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-1.5.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.0.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.0.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.1.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.2.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.3.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm run transpile && npm run minify && npm run size","minify":"uglifyjs -c sequences,dead_code,conditionals,booleans,unused,if_return,join_vars,drop_console -m -o $npm_package_main --in-source-map ${npm_package_main}.map --source-map ${npm_package_main}.map -- $npm_package_main","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"babel -f preact.js -s -o $npm_package_main < src/${npm_package_main}","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.4.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.4.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.5.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.5.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.6.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.6.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.7.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.7.3.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm run test:mocha && npm run test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.0.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.1.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.2.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"2.8.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-2.8.3.tgz"},"scripts":{"size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"eslint src test && npm-run-all --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0-beta4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0-beta4.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main --mangle-regex=\"/^(classCallCheck|components|normalizeName|add|clean|process|collect|create|nodes|itemsOffline)$/\" --mangle-props -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.0.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"3.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-3.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -cm -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.1.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.1.3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.3.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile":"rollup -c rollup.config.js -m ${npm_package_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.5.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.5.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.6.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.6.3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.7.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"4.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-4.8.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName src/preact.js -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta3.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta4.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta5.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta6.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta7.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta8.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta9.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta10":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta10.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_dev_main -c unsafe,loops=false,keep_fargs=false,pure_getters,screw_ie8 -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.0-beta11":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.0-beta11.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.12":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.12.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile optimize minify size","clean":"rimraf dist/","minify":"uglifyjs $npm_package_main -c unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.14":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.14.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.0.1-beta.15":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.0.1-beta.15.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.16":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.16.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.17":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.17.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.18":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.18.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.19":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.19.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.20":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.20.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.21":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.21.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"}},"5.1.0-beta.22":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.22.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t .strip-tdz-codemod.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.23":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.23.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.24":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.24.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.25":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.25.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.1.0-beta.26":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.1.0-beta.26.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.2.0-beta.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.2.0-beta.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.3.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.4.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.4.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.5.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.6.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow"}},"5.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-5.7.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.0.2.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.1.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.2.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.2.1.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.3.0.tgz"},"scripts":{"lint":"eslint src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"6.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-6.4.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"size=$(gzip-size $npm_package_minified_main) && echo \"gzip size: $size / $(pretty-bytes $size)\"","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ $npm_package_aliases_main ${npm_package_aliases_main}.map devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs $npm_package_main -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o $npm_package_minified_main -p relative --in-source-map ${npm_package_main}.map --source-map ${npm_package_minified_main}.map","release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","optimize":"uglifyjs $npm_package_dev_main -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o $npm_package_main -p relative --in-source-map ${npm_package_dev_main}.map --source-map ${npm_package_main}.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","transpile:main":"rollup -c config/rollup.config.js -m ${npm_package_dev_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_dev_main","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m ${npm_package_aliases_main}.map -f umd -n $npm_package_amdName $npm_package_jsnext_main -o $npm_package_aliases_main","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"cp src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"cp src/preact.d.ts dist/preact.d.ts"}},"7.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.2.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.0.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.0.3.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles src/preact.js.flow dist/preact.js.flow","copy-typescript-definition":"copyfiles src/preact.d.ts dist/preact.d.ts"}},"7.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.1.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"7.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.2.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"7.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-7.2.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ aliases.js aliases.js.map  devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:aliases transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -f umd -n preact src/preact.js -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:aliases":"rollup -c config/rollup.config.aliases.js -m aliases.js.map -f umd -n preact src/preact.js -o aliases.js","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.0.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.0.1.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.1.0.tgz"},"scripts":{"lint":"eslint devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map","strip":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","transpile":"npm-run-all transpile:main transpile:devtools","prepublish":"npm run build","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --compilers js:babel/register test/shared test/node","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.0.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","donate":"echo \"\u001b[35m\u001b[1mLove Preact? You can now donate to our open collective:\u001b[22m\u001b[39m\n > \u001b[34mhttps://opencollective.com/preact/donate\u001b[39m\"","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"npm run -s donate","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js -m dist/preact.esm.js.map -o dist/preact.esm.js","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.1.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","donate":"echo \"\u001b[35m\u001b[1mLove Preact? You can now donate to our open collective:\u001b[22m\u001b[39m\n > \u001b[34mhttps://opencollective.com/preact/donate\u001b[39m\"","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"npm run -s donate","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js -m dist/preact.esm.js.map -o dist/preact.esm.js","transpile:main":"rollup -c config/rollup.config.js -m dist/preact.dev.js.map -n preact -o dist/preact.dev.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js -o devtools.js -m devtools.js.map","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.2.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node ./config/donation-message.js","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.3.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.4.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"cp package.json .package.json; node config/prepublish.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.5.tgz"},"scripts":{"lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.6.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.7.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","prepublish":"npm run build","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.8.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js  --source-map \"base='dist/preact.js',content='dist/preact.js.map',filename='dist/preact.min.js.map'\"","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js --source-map \"base='dist/preact.dev.js',content='dist/preact.dev.js.map',filename='dist/preact.js.map'\"","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.2.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.2.9.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.esm.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.esm.js","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.esm.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.3.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.3.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.4.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.4.2.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-alpha.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-alpha.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-alpha.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"},"dependencies":{"prop-types":"^15.6.2"}},"10.0.0-beta.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","test:size":"bundlesize","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs,umd","lint":"eslint src test","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-beta.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-beta.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-rc.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.0.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-rc.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:flow":"flow check","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.1.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow test:size","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"8.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.2.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.0-rc.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0-rc.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0-rc.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.0.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:*","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw && cp dist/preact.js dist/preact.min.js","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"8.5.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-8.5.3.tgz"},"scripts":{"flow":"flow","lint":"eslint debug devtools src test","size":"node -e \"process.stdout.write('gzip size: ')\" && gzip-size --raw dist/preact.min.js","test":"npm-run-all lint --parallel test:mocha test:karma test:ts test:flow","build":"npm-run-all --silent clean transpile copy-flow-definition copy-typescript-definition strip optimize minify size","clean":"rimraf dist/ devtools.js devtools.js.map debug.js debug.js.map test/ts/**/*.js","strip":"npm-run-all strip:main strip:esm","minify":"uglifyjs dist/preact.js -c collapse_vars,evaluate,screw_ie8,unsafe,loops=false,keep_fargs=false,pure_getters,unused,dead_code -m -o dist/preact.min.js -p relative --in-source-map dist/preact.js.map --source-map dist/preact.min.js.map","prepare":"npm run build","release":"cross-env npm run smart-release","test:ts":"tsc -p test/ts/ && mocha --require babel-register test/ts/**/*-test.js","optimize":"uglifyjs dist/preact.dev.js -c conditionals=false,sequences=false,loops=false,join_vars=false,collapse_vars=false --pure-funcs=Object.defineProperty --mangle-props --mangle-regex=\"/^(_|normalizedNodeName|nextBase|prev[CPS]|_parentC)/\" --name-cache config/properties.json -b width=120,quote_style=3 -o dist/preact.js -p relative --in-source-map dist/preact.dev.js.map --source-map dist/preact.js.map","strip:esm":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.mjs && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.mjs","test:flow":"flow check","test:size":"bundlesize","transpile":"npm-run-all transpile:main transpile:esm transpile:umd transpile:devtools transpile:debug","strip:main":"jscodeshift --run-in-band -s -t config/codemod-strip-tdz.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-const.js dist/preact.dev.js && jscodeshift --run-in-band -s -t config/codemod-let-name.js dist/preact.dev.js","test:karma":"karma start test/karma.conf.js --single-run","test:mocha":"mocha --recursive --require babel-register test/shared test/node","postinstall":"node -e \"console.log('\\u001b[35m\\u001b[1mLove Preact? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/preact/donate\\u001b[0m')\"","smart-release":"npm run build && npm test && git commit -am $npm_package_version && git tag $npm_package_version && git push && git push --tags && npm publish","transpile:esm":"rollup -c config/rollup.config.module.js","transpile:umd":"rollup -c config/rollup.config.umd.js","prepublishOnly":"npm run build","transpile:main":"rollup -c config/rollup.config.js","transpile:debug":"babel debug/ -o debug.js -s","test:karma:watch":"npm run test:karma -- no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","transpile:devtools":"rollup -c config/rollup.config.devtools.js","copy-flow-definition":"copyfiles -f src/preact.js.flow dist","copy-typescript-definition":"copyfiles -f src/preact.d.ts dist"}},"10.0.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.0.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build --parallel test:mocha test:karma test:ts","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.1.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.1.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.1.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.1.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.2.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.2.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.2.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.2.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.3.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.3.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all lint build test:unit","build":"npm-run-all --parallel build:* && cp dist/preact.js dist/preact.min.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.7.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.4.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.4.8.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && node ./config/check-export-map.js","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/copy-csstype.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.7.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/copy-csstype.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.8.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.9.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.10":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.10.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.11":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.11.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.12":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.12.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.13":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.13.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.14":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.14.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.5.15":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.5.15.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.6.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.6.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"11.0.0-experimental.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-11.0.0-experimental.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs --no-generateTypes","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","_bundle":"microbundle build --raw -f modern,cjs,umd --no-generateTypes","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"npm run -s _bundle -- --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks --no-generateTypes","postbuild":"node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"npm run -s _bundle","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks' --no-generateTypes","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"npm run -s _bundle -- --cwd debug","build:hooks":"npm run -s _bundle -- --cwd hooks","build:compat":"npm run -s _bundle -- --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js --no-generateTypes","build:devtools":"npm run -s _bundle -- --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"npm run -s _bundle -- --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"11.0.0-experimental.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-11.0.0-experimental.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs --no-generateTypes","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","_bundle":"microbundle build --raw -f modern,cjs,umd --no-generateTypes","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"npm run -s _bundle -- --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks --no-generateTypes","postbuild":"node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"npm run -s _bundle","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks' --no-generateTypes","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"npm run -s _bundle -- --cwd debug","build:hooks":"npm run -s _bundle -- --cwd hooks","build:compat":"npm run -s _bundle -- --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js --no-generateTypes","build:devtools":"npm run -s _bundle -- --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"npm run -s _bundle -- --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.7.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.7.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.8.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.8.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.9.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.9.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.0.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.1.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.2.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.3.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.4.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.5.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.10.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.10.6.tgz"},"scripts":{"dev":"microbundle watch --raw --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw","dev:compat":"microbundle watch --raw --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --cwd debug","build:hooks":"microbundle build --raw --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw -f iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.11.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.11.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.12.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.12.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.12.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.12.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"eslint src test debug compat hooks test-utils","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.13.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.13.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.14.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.14.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.14.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.14.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.15.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.15.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.15.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.15.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.16.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.16.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.17.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.17.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.17.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.17.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","lint":"run-s eslint","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.18.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.18.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.5.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.6.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.19.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.19.7.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.20.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.20.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.21.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.21.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.22.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.22.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s eslint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","eslint":"eslint src test debug compat hooks test-utils","format":"prettier --write \"**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}\"","prepare":"run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"prettier --check '**/*.{js,jsx,mjs,cjs,ts,tsx,yml,json,html,md,css,scss}'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.22.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.22.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint src test debug compat hooks test-utils -c oxlint.json","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.23.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.23.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.24.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.24.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && check-export-map && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","benchmark":"npm run test:karma:bench -- no-single-run","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:bench":"cross-env PERFORMANCE=true COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test/benchmarks/**.js --single-run","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.25.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.25.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build src/index.js src/scheduler.js --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.2.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build && npm-merge-driver-install","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.3":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.3.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.4":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.4.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.5":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.5.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:karma:minify test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:karma":"cross-env COVERAGE=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:karma:hooks":"cross-env COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=hooks/test/browser/**.js --no-single-run","test:karma:watch":"cross-env BABEL_NO_MODULES=true karma start karma.conf.js --no-single-run","test:mocha:watch":"npm run test:mocha -- --watch","test:karma:minify":"cross-env COVERAGE=true MINIFY=true BABEL_NO_MODULES=true karma start karma.conf.js --single-run","test:karma:test-utils":"cross-env PERFORMANCE=false COVERAGE=false BABEL_NO_MODULES=true karma start karma.conf.js --grep=test-utils/test/shared/**.js --no-single-run"}},"10.26.6":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.6.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel build:*","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p test:ts:*","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.7":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.7.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.8":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.8.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.26.9":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.26.9.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.27.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.27.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"10.27.1":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.27.1.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","test:unit":"run-p test:mocha test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:mocha:watch":"npm run test:mocha -- --watch","test:vitest:watch":"vitest"}},"11.0.0-beta.0":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-11.0.0-beta.0.tgz"},"scripts":{"dev":"microbundle watch --raw --no-generateTypes --format cjs","tsc":"tsc -p jsconfig-lint.json","lint":"run-s oxlint tsc","test":"npm-run-all build lint test:unit","build":"npm-run-all --parallel 'build:*'","format":"biome format --write .","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","prepare":"husky && npm run test:install && run-s build","test:ts":"run-p 'test:ts:*'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","postbuild":"node ./config/compat-entries.js","test:unit":"run-p test:vitest:min test:ts","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","test:vitest":"cross-env COVERAGE=true vitest run","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","format:check":"biome format .","test:install":"playwright install chromium","test:ts:core":"tsc -p test/ts/","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","test:ts:compat":"tsc -p compat/test/ts/","test:vitest:min":"cross-env MINIFY=true vitest run","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","test:vitest:watch":"vitest"}},"10.27.2":{"name":"preact","dist":{"tarball":"https://registry.npmjs.org/preact/-/preact-10.27.2.tgz"},"scripts":{"prepare":"husky && run-s build","build":"npm-run-all --parallel 'build:*'","build:core":"microbundle build --raw --no-generateTypes -f cjs,esm,umd","build:core-min":"microbundle build --raw --no-generateTypes -f cjs,esm,umd,iife src/cjs.js -o dist/preact.min.js","build:debug":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd debug","build:devtools":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd devtools","build:hooks":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd hooks","build:test-utils":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd test-utils","build:compat":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd compat --globals 'preact/hooks=preactHooks'","build:jsx":"microbundle build --raw --no-generateTypes -f cjs,esm,umd --cwd jsx-runtime","postbuild":"node ./config/node-13-exports.js && node ./config/compat-entries.js","dev":"microbundle watch --raw --no-generateTypes --format cjs","dev:hooks":"microbundle watch --raw --no-generateTypes --format cjs --cwd hooks","dev:compat":"microbundle watch --raw --no-generateTypes --format cjs --cwd compat --globals 'preact/hooks=preactHooks'","test":"npm-run-all build lint test:unit","test:unit":"run-p test:mocha test:vitest:min test:ts","test:vitest":"cross-env COVERAGE=true vitest run","test:vitest:min":"cross-env MINIFY=true vitest run","test:vitest:watch":"vitest","test:ts":"run-p 'test:ts:*'","test:ts:core":"tsc -p test/ts/ && mocha --require \"@babel/register\" test/ts/**/*-test.js","test:ts:compat":"tsc -p compat/test/ts/","test:mocha":"mocha --recursive --require \"@babel/register\" test/shared test/node","test:mocha:watch":"npm run test:mocha -- --watch","lint":"run-s oxlint tsc","tsc":"tsc -p jsconfig-lint.json","oxlint":"oxlint -c oxlint.json src test/browser test/node test/shared debug compat hooks test-utils","format":"biome format --write .","format:check":"biome format ."}}},"time":{"created":"2015-09-11T02:41:33.521Z","modified":"2025-09-13T13:59:16.549Z","1.2.0":"2015-09-11T02:41:33.521Z","1.3.0":"2015-09-14T11:55:43.607Z","1.3.1":"2015-09-14T12:39:27.207Z","1.3.2":"2015-09-15T13:54:28.472Z","1.4.0":"2015-10-01T13:04:37.935Z","1.5.0":"2015-10-16T03:18:49.860Z","1.5.1":"2015-10-18T21:51:58.158Z","1.5.2":"2015-10-31T17:05:00.704Z","2.0.0":"2015-11-13T02:01:42.373Z","2.0.1":"2015-11-17T22:17:00.803Z","2.1.0":"2015-11-18T16:53:08.007Z","2.2.0":"2015-11-24T04:23:19.654Z","2.3.0":"2015-11-29T02:51:58.274Z","2.4.0":"2015-12-03T18:56:53.836Z","2.4.1":"2015-12-03T19:00:51.839Z","2.5.0":"2015-12-03T19:24:20.254Z","2.5.1":"2015-12-16T01:52:27.585Z","2.6.0":"2015-12-18T02:30:39.330Z","2.6.1":"2015-12-18T12:54:25.563Z","2.7.0":"2016-01-07T01:09:04.369Z","2.7.1":"2016-01-07T02:07:50.761Z","2.7.2":"2016-01-07T20:52:50.085Z","2.7.3":"2016-01-18T17:51:47.118Z","2.8.0":"2016-01-29T02:42:35.971Z","2.8.1":"2016-01-29T03:01:39.566Z","2.8.2":"2016-01-29T14:25:41.524Z","3.0.0-beta1":"2016-02-01T02:03:13.779Z","2.8.3":"2016-02-01T13:15:40.231Z","3.0.0-beta2":"2016-02-01T13:30:58.138Z","3.0.0-beta3":"2016-02-02T22:08:20.491Z","3.0.0-beta4":"2016-02-03T04:36:40.125Z","3.0.0":"2016-02-03T15:16:29.774Z","3.0.1":"2016-02-04T02:36:28.567Z","3.0.2":"2016-02-06T05:03:41.657Z","3.1.0":"2016-02-06T21:44:36.996Z","3.2.0":"2016-02-07T04:15:34.310Z","3.3.0":"2016-02-12T23:06:04.621Z","3.4.0":"2016-02-14T18:23:13.286Z","4.0.0":"2016-02-23T13:12:49.223Z","4.0.1":"2016-02-23T23:21:17.172Z","4.1.0":"2016-02-26T02:57:08.466Z","4.1.1":"2016-03-03T00:17:06.015Z","4.1.2":"2016-03-09T16:32:39.863Z","4.1.3":"2016-03-10T00:16:15.334Z","4.2.0":"2016-03-11T02:32:07.422Z","4.3.0":"2016-03-12T20:24:27.115Z","4.3.1":"2016-03-13T16:34:19.231Z","4.3.2":"2016-03-14T01:01:44.674Z","4.4.0":"2016-03-18T02:30:48.284Z","4.5.0":"2016-03-19T16:38:25.367Z","4.5.1":"2016-03-22T19:02:38.063Z","4.6.0":"2016-04-12T02:49:36.831Z","4.6.1":"2016-04-12T13:06:18.106Z","4.6.2":"2016-04-13T13:59:14.708Z","4.6.3":"2016-04-16T19:27:10.377Z","4.7.0":"2016-04-18T13:15:32.639Z","4.7.1":"2016-04-19T04:25:29.473Z","4.7.2":"2016-04-19T04:58:37.680Z","4.8.0":"2016-04-27T13:07:36.312Z","5.0.0-beta1":"2016-05-21T15:54:53.116Z","5.0.0-beta2":"2016-05-24T03:11:08.050Z","5.0.0-beta3":"2016-05-24T12:32:09.361Z","5.0.0-beta4":"2016-05-24T15:23:45.523Z","5.0.0-beta5":"2016-05-26T14:09:07.725Z","5.0.0-beta6":"2016-05-31T12:45:55.448Z","5.0.0-beta7":"2016-06-04T23:41:09.468Z","5.0.0-beta8":"2016-06-06T02:50:50.910Z","5.0.0-beta9":"2016-06-06T03:04:26.866Z","5.0.0-beta10":"2016-06-07T12:39:49.452Z","5.0.0-beta11":"2016-06-09T03:23:49.785Z","5.0.0-beta12":"2016-06-13T15:56:58.301Z","5.0.0-beta.12":"2016-06-13T16:00:14.174Z","5.0.1-beta.12":"2016-06-13T16:02:18.914Z","5.0.1-beta.13":"2016-06-18T17:26:50.831Z","5.0.1-beta.14":"2016-06-18T20:19:42.138Z","5.0.1-beta.15":"2016-06-20T23:50:00.826Z","5.1.0-beta.16":"2016-06-21T12:04:36.462Z","5.1.0-beta.17":"2016-06-21T23:03:51.577Z","5.1.0-beta.18":"2016-06-23T00:39:51.051Z","5.1.0-beta.19":"2016-06-23T16:02:22.959Z","5.1.0-beta.20":"2016-06-28T21:10:24.902Z","5.1.0-beta.21":"2016-06-30T13:29:34.986Z","5.1.0-beta.22":"2016-06-30T17:28:44.419Z","5.1.0-beta.23":"2016-07-07T03:15:13.442Z","5.1.0-beta.24":"2016-07-08T12:02:19.276Z","5.1.0-beta.25":"2016-07-08T12:14:10.734Z","5.1.0-beta.26":"2016-07-08T12:29:22.529Z","5.2.0-beta.0":"2016-07-14T11:27:25.082Z","5.3.0":"2016-07-17T04:52:42.308Z","5.3.1":"2016-07-17T07:59:15.345Z","5.3.2":"2016-07-18T23:17:04.241Z","5.4.0":"2016-07-19T04:35:40.449Z","5.4.1":"2016-07-21T20:01:47.331Z","5.5.0":"2016-07-22T01:21:13.867Z","5.6.0":"2016-07-24T03:16:38.332Z","5.7.0":"2016-08-18T03:41:58.392Z","6.0.0":"2016-08-25T16:21:27.439Z","6.0.1":"2016-09-03T00:43:51.438Z","6.0.2":"2016-09-07T17:09:56.611Z","6.1.0":"2016-09-29T03:30:08.591Z","6.2.0":"2016-10-03T03:49:15.145Z","6.2.1":"2016-10-04T00:32:30.240Z","6.3.0":"2016-10-06T01:05:55.844Z","6.4.0":"2016-10-28T02:39:32.077Z","7.0.0":"2016-11-10T19:33:23.091Z","7.0.1":"2016-11-10T19:44:13.979Z","7.0.2":"2016-11-14T22:30:13.402Z","7.0.3":"2016-11-17T16:27:21.414Z","7.1.0":"2016-12-02T23:00:54.087Z","7.2.0":"2017-01-23T13:39:38.352Z","7.2.1":"2017-03-24T01:00:20.466Z","8.0.0":"2017-04-06T03:15:52.752Z","8.0.1":"2017-04-06T16:40:49.575Z","8.1.0":"2017-04-09T15:42:00.618Z","8.2.0":"2017-07-11T02:24:39.581Z","8.2.1":"2017-07-11T22:36:29.547Z","8.2.2":"2017-08-24T16:44:26.602Z","8.2.3":"2017-08-24T17:37:06.651Z","8.2.4":"2017-08-24T19:08:12.826Z","8.2.5":"2017-08-28T20:55:50.750Z","8.2.6":"2017-10-24T16:20:54.004Z","8.2.7":"2017-12-12T18:18:31.631Z","8.2.8":"2018-04-26T19:51:06.541Z","8.2.9":"2018-04-30T14:39:08.052Z","8.3.0":"2018-08-05T20:36:45.671Z","8.3.1":"2018-08-16T01:35:49.815Z","8.4.0":"2018-12-06T19:19:39.506Z","8.4.1":"2018-12-06T19:55:36.067Z","8.4.2":"2018-12-07T20:51:26.689Z","10.0.0-alpha.0":"2019-03-04T23:43:24.942Z","10.0.0-alpha.1":"2019-03-07T19:54:55.027Z","10.0.0-alpha.2":"2019-03-14T19:21:56.441Z","10.0.0-alpha.3":"2019-04-02T18:42:08.474Z","10.0.0-alpha.4":"2019-04-05T20:16:30.178Z","10.0.0-beta.0":"2019-04-17T17:07:40.084Z","10.0.0-beta.1":"2019-05-02T20:48:54.543Z","10.0.0-beta.2":"2019-05-31T12:11:14.120Z","10.0.0-beta.3":"2019-06-21T19:03:23.955Z","10.0.0-rc.0":"2019-07-11T20:13:33.642Z","8.5.0":"2019-08-02T18:34:23.572Z","10.0.0-rc.1":"2019-08-02T20:34:45.123Z","8.5.1":"2019-08-08T07:48:55.246Z","8.5.2":"2019-08-18T05:51:15.904Z","10.0.0-rc.2":"2019-09-09T19:45:28.570Z","10.0.0-rc.3":"2019-09-10T18:19:37.247Z","10.0.0":"2019-10-01T18:26:18.414Z","10.0.1":"2019-10-17T18:09:23.729Z","10.0.2":"2019-10-28T17:57:16.701Z","10.0.3":"2019-10-29T09:18:45.999Z","10.0.4":"2019-10-29T13:06:46.399Z","8.5.3":"2019-11-01T08:41:49.217Z","10.0.5":"2019-11-10T13:25:36.066Z","10.1.0":"2019-12-09T18:50:36.886Z","10.1.1":"2019-12-16T19:51:39.067Z","10.2.0":"2020-01-07T20:42:55.712Z","10.2.1":"2020-01-08T08:36:04.685Z","10.3.0":"2020-02-03T19:15:49.374Z","10.3.1":"2020-02-06T17:24:50.568Z","10.3.2":"2020-02-15T13:50:17.299Z","10.3.3":"2020-03-01T17:57:56.588Z","10.3.4":"2020-03-11T19:16:12.060Z","10.4.0":"2020-04-08T11:04:58.743Z","10.4.1":"2020-04-20T19:26:16.644Z","10.4.2":"2020-05-18T17:48:44.135Z","10.4.3":"2020-05-18T23:18:23.107Z","10.4.4":"2020-05-18T23:25:44.468Z","10.4.5":"2020-06-30T19:02:40.819Z","10.4.6":"2020-07-14T16:04:09.402Z","10.4.7":"2020-08-05T21:20:18.587Z","10.4.8":"2020-08-26T18:37:19.566Z","10.5.0":"2020-09-23T11:05:57.380Z","10.5.1":"2020-09-23T13:28:42.440Z","10.5.2":"2020-09-23T14:10:51.610Z","10.5.3":"2020-09-28T20:59:48.776Z","10.5.4":"2020-10-05T16:20:46.512Z","10.5.5":"2020-10-18T10:24:46.041Z","10.5.6":"2020-11-12T18:41:42.618Z","10.5.7":"2020-11-12T21:59:22.228Z","10.5.8":"2020-12-30T15:19:16.883Z","10.5.9":"2021-01-03T12:33:26.896Z","10.5.10":"2021-01-14T12:16:51.666Z","10.5.11":"2021-01-20T21:45:27.375Z","10.5.12":"2021-01-26T21:59:23.057Z","10.5.13":"2021-03-14T21:17:27.950Z","10.5.14":"2021-07-01T16:55:57.821Z","10.5.15":"2021-10-12T05:54:49.664Z","10.6.0":"2021-11-23T16:06:22.346Z","10.6.1":"2021-11-25T11:00:52.961Z","10.6.2":"2021-11-29T16:11:35.031Z","10.6.3":"2021-12-08T13:11:29.490Z","10.6.4":"2021-12-09T20:57:46.032Z","10.6.5":"2022-01-27T17:07:07.765Z","10.6.6":"2022-02-14T12:35:43.067Z","11.0.0-experimental.0":"2022-02-20T11:19:13.632Z","11.0.0-experimental.1":"2022-02-20T14:00:49.241Z","10.7.0":"2022-03-29T19:13:24.818Z","10.7.1":"2022-04-05T08:59:46.771Z","10.7.2":"2022-05-06T19:02:40.964Z","10.7.3":"2022-06-01T07:23:55.574Z","10.8.0":"2022-06-14T14:26:07.619Z","10.8.1":"2022-06-16T18:04:40.475Z","10.8.2":"2022-06-22T13:52:39.706Z","10.9.0":"2022-07-06T08:34:08.168Z","10.10.0":"2022-07-13T10:29:35.663Z","10.10.1":"2022-08-05T12:06:14.331Z","10.10.2":"2022-08-10T08:55:13.756Z","10.10.3":"2022-08-16T08:42:56.764Z","10.10.4":"2022-08-18T21:06:27.156Z","10.10.5":"2022-08-19T08:57:19.400Z","10.10.6":"2022-08-19T17:18:02.412Z","10.11.0":"2022-09-12T08:37:37.413Z","10.11.1":"2022-10-04T19:48:09.959Z","10.11.2":"2022-10-15T09:07:00.655Z","10.11.3":"2022-11-14T08:12:50.974Z","10.12.0":"2023-02-06T21:34:34.584Z","10.12.1":"2023-02-09T18:32:40.605Z","10.13.0":"2023-02-24T13:08:39.345Z","10.13.1":"2023-03-09T14:38:25.192Z","10.13.2":"2023-03-27T08:33:37.222Z","10.14.0":"2023-05-14T10:27:37.067Z","10.14.1":"2023-05-16T15:22:16.273Z","10.15.0":"2023-05-21T19:05:11.878Z","10.15.1":"2023-05-27T09:28:33.984Z","10.16.0":"2023-07-09T08:01:55.455Z","10.17.0":"2023-08-14T13:24:00.433Z","10.17.1":"2023-08-19T07:46:40.710Z","10.18.0":"2023-09-28T09:33:11.094Z","10.18.1":"2023-10-01T09:22:19.523Z","10.18.2":"2023-11-03T08:05:15.726Z","10.19.0":"2023-11-11T08:03:27.443Z","10.19.1":"2023-11-11T10:18:09.873Z","10.19.2":"2023-11-14T05:58:38.569Z","10.19.3":"2023-12-08T14:31:39.334Z","10.19.4":"2024-02-08T07:06:58.208Z","10.19.5":"2024-02-16T09:42:54.732Z","10.19.6":"2024-02-22T09:35:27.207Z","10.19.7":"2024-03-18T15:43:39.786Z","10.20.0":"2024-03-20T06:49:01.974Z","10.20.1":"2024-03-23T06:49:52.763Z","10.20.2":"2024-04-09T11:16:49.057Z","10.21.0":"2024-04-30T06:52:47.630Z","10.22.0":"2024-05-15T09:15:51.243Z","10.22.1":"2024-07-01T05:40:14.338Z","10.23.0":"2024-07-23T19:06:34.752Z","10.23.1":"2024-07-25T06:21:28.315Z","10.23.2":"2024-08-12T17:20:43.069Z","10.24.0":"2024-09-14T06:34:30.767Z","10.24.1":"2024-09-24T16:11:59.824Z","10.24.2":"2024-10-04T06:13:03.003Z","10.24.3":"2024-10-14T05:57:14.282Z","10.25.0":"2024-11-22T07:15:31.036Z","10.25.1":"2024-12-02T07:37:42.843Z","10.25.2":"2024-12-12T08:16:11.863Z","10.25.3":"2024-12-18T20:59:21.096Z","10.25.4":"2024-12-28T08:27:46.858Z","10.26.0":"2025-02-16T16:29:33.713Z","10.26.1":"2025-02-18T06:48:52.487Z","10.26.2":"2025-02-18T11:33:30.060Z","10.26.3":"2025-02-27T11:19:02.614Z","10.26.4":"2025-02-28T19:47:10.780Z","10.26.5":"2025-04-06T08:18:08.720Z","10.26.6":"2025-05-06T17:47:10.075Z","10.26.7":"2025-05-24T09:54:00.306Z","10.26.8":"2025-05-29T07:16:37.656Z","10.26.9":"2025-06-11T12:21:03.584Z","10.27.0":"2025-07-28T16:21:03.004Z","10.27.1":"2025-08-18T16:44:53.404Z","11.0.0-beta.0":"2025-08-19T18:34:58.298Z","10.27.2":"2025-09-13T13:59:16.323Z"}},"etag":"W/\"dd7d4d2384a24ed1c99c6f34b548b9c3\"","lastModified":"Sat, 13 Sep 2025 13:59:18 GMT"}
